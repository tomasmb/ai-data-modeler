app aiDataModeler {
  wasp: {
    version: "^0.16.2"
  },
  title: "aiDataModeler",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

action createDataModel {
  fn: import { createDataModel } from "@src/actions.js",
  entities: [DataModel]
}

action updateDataModel {
  fn: import { updateDataModel } from "@src/actions.js",
  entities: [DataModel]
}

action saveDataModelSchema {
  fn: import { saveDataModelSchema } from "@src/actions.js",
  entities: [DataModel, ModelEntity, Field, Relation]
}

query getDataModelSchema {
  fn: import { getDataModelSchema } from "@src/queries.js",
  entities: [DataModel, ModelEntity, Field, Relation]
}

query getDataModels {
  fn: import { getDataModels } from "@src/queries.js",
  entities: [DataModel]
}

query getDataModel {
  fn: import { getDataModel } from "@src/queries.js",
  entities: [DataModel]
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import DashboardPage from "@src/pages/Dashboard.jsx",
  authRequired: true
}

route DataModelDetailRoute { path: "/data-model/:id", to: DataModelDetailPage }
page DataModelDetailPage {
  component: import DataModelDetailPage from "@src/pages/DataModelDetail/index.jsx",
  authRequired: true
}

action sendChatMessage {
  fn: import { sendChatMessage } from "@src/actions.js",
  entities: [DataModel, ChatMessage]
}

query getDataModelChatHistory {
  fn: import { getDataModelChatHistory } from "@src/queries.js",
  entities: [DataModel, ChatMessage]
}